@model IEnumerable<KnockoutjsWithMVC.Models.Student>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table>
    <thead>
        <tr>
            <th>Student Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Age</th>
            <th>Gender</th>
            <th>Batch</th>
            <th>Address</th>
            <th>Class</th>
            <th>School</th>
            <th>Domicile</th>
            <th></th>
        </tr>
    </thead>kk
    <tbody data-bind="foreach: Students">
        <tr>
            <td data-bind="text: StudentId"></td>
            <td data-bind="text: FirstName"></td>
            <td data-bind="text: LastName"></td>
            <td data-bind="text: Age"></td>
            <td data-bind="text: Gender"></td>
            <td data-bind="text: Batch"></td>
            <td data-bind="text: Address"></td>
            <td data-bind="text: Class"></td>
            <td data-bind="text: School"></td>
            <td data-bind="text: Domicile"></td>
            <td>
                <a data-bind="click: editStudent">Edit</a>
                <a data-bind="click: deleteStudent">Delete</a>
            </td>
        </tr>
    </tbody>
</table>

<script>
    var urlPath = window.location.pathname;
    $(function () {
        ko.applyBindings(StudentListVM);
        StudentListVM.getStudents();
    });
    //View Model
    var StudentListVM = {
        Students: ko.observableArray([]),
        getStudents: function () {
            var self = this;
            $.ajax({
                type: "GET",
                url: '/Student/FetchStudents',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    self.Students(data); //Put the response in ObservableArray
                },
                error: function (err) {
                    alert(err.status + " : " + err.statusText);
                }
            });
        },
    };
    self.editStudent = function (student) {
        window.location.href = '/Student/Edit/' + student.StudentId;
    };
    self.deleteStudent = function (student) {
        window.location.href = '/Student/Delete/' + student.StudentId;
    };
    //Model
    function Students(data) {
        this.StudentId = ko.observable(data.StudentId);
        this.FirstName = ko.observable(data.FirstName);
        this.LastName = ko.observable(data.LastName);
        this.Age = ko.observable(data.Age);
        this.Gender = ko.observable(data.Gender);
        this.Batch = ko.observable(data.Batch);
        this.Address = ko.observable(data.Address);
        this.Class = ko.observable(data.Class);
        this.School = ko.observable(data.School);
        this.Domicile = ko.observable(data.Domicile);
    }
</script>
